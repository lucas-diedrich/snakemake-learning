rule all:
    input: 
        # Run the same workflow for various conditions via `expand` (original/grayscale/equalized/blurred)
        expand(
            "../results/histograms/{transformation}_hist.png",
            transformation=["original", "grayscale", "equalized", "blurred"]
        )

# Very simple rule
rule save_image:
    output:
        report("../results/astronaut.png", category="Input image")
    shell: "mamba run -n spatialdata python scripts/create-data.py --image-name astronaut --output {output[0]}"

# Simple rule definition
rule transform_image:
    input:
        "../results/astronaut.png"
    output:
        report("../results/transformed-images/{transformation}.png", category="Transformed image")
    shell:
        "mamba run -n spatialdata python scripts/transform.py --image {input} --transformation {wildcards.transformation} --output {output[0]}"

# More complex rule definition with variables
rule plot_histogram:
    input:
        # We can define the input dynamically as output of a different rule
        lambda wildcards: rules.transform_image.output[0]
    output:
        # File names can be given a variable name which can be referenced in the "shell" command
        histogram_plot=report("../results/histograms/{transformation}_hist.png", category="Histogram")
    shell:
        "mamba run -n spatialdata python scripts/plot-histogram.py --image {input} --title astronaut --output {output.histogram_plot}"
